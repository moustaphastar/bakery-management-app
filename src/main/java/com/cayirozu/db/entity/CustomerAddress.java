package com.cayirozu.db.entity;
// Generated 19 Ara 2020 06:35:03 by Hibernate Tools 5.2.12.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CustomerAddress generated by hbm2java
 */
@Entity
@Table(name = "CustomerAddress", schema = "dbo", catalog = "onlineaccounting")
public class CustomerAddress implements java.io.Serializable {

	private int id;
	private Address address;
	private Customer customer;
	private Serializable description;
	private Date lastUpdate;
	private boolean active;
	private Set<ShipmentRouteIndex> shipmentRouteIndexes = new HashSet<>(0);

	public CustomerAddress() {
	}

	public CustomerAddress(int id, Address address, Customer customer, Serializable description, Date lastUpdate,
			boolean active) {
		this.id = id;
		this.address = address;
		this.customer = customer;
		this.description = description;
		this.lastUpdate = lastUpdate;
		this.active = active;
	}

	public CustomerAddress(int id, Address address, Customer customer, Serializable description, Date lastUpdate,
			boolean active, Set<ShipmentRouteIndex> shipmentRouteIndexes) {
		this.id = id;
		this.address = address;
		this.customer = customer;
		this.description = description;
		this.lastUpdate = lastUpdate;
		this.active = active;
		this.shipmentRouteIndexes = shipmentRouteIndexes;
	}

	@Id

	@Column(name = "Id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AddressId", nullable = false)
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CustomerId", nullable = false)
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@Column(name = "Description", nullable = false)
	public Serializable getDescription() {
		return this.description;
	}

	public void setDescription(Serializable description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LastUpdate", nullable = false, length = 19)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	@Column(name = "Active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerAddress")
	public Set<ShipmentRouteIndex> getShipmentRouteIndexes() {
		return this.shipmentRouteIndexes;
	}

	public void setShipmentRouteIndexes(Set<ShipmentRouteIndex> shipmentRouteIndexes) {
		this.shipmentRouteIndexes = shipmentRouteIndexes;
	}

}

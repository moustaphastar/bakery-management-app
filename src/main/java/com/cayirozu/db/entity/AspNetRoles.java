package com.cayirozu.db.entity;
// Generated 19 Ara 2020 06:35:03 by Hibernate Tools 5.2.12.Final

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * AspNetRoles generated by hbm2java
 */
@Entity
@Table(name = "AspNetRoles", schema = "dbo", catalog = "onlineaccounting", uniqueConstraints = @UniqueConstraint(columnNames = "NormalizedName"))
public class AspNetRoles implements java.io.Serializable {

	private Serializable id;
	private Serializable name;
	private Serializable normalizedName;
	private Serializable concurrencyStamp;
	private Set<AspNetRoleClaims> aspNetRoleClaims = new HashSet<>(0);
	private Set<AspNetUsers> aspNetUsers = new HashSet<>(0);

	public AspNetRoles() {
	}

	public AspNetRoles(Serializable id) {
		this.id = id;
	}

	public AspNetRoles(Serializable id, Serializable name, Serializable normalizedName, Serializable concurrencyStamp,
			Set<AspNetRoleClaims> aspNetRoleClaims, Set<AspNetUsers> aspNetUsers) {
		this.id = id;
		this.name = name;
		this.normalizedName = normalizedName;
		this.concurrencyStamp = concurrencyStamp;
		this.aspNetRoleClaims = aspNetRoleClaims;
		this.aspNetUsers = aspNetUsers;
	}

	@Id

	@Column(name = "Id", unique = true, nullable = false)
	public Serializable getId() {
		return this.id;
	}

	public void setId(Serializable id) {
		this.id = id;
	}

	@Column(name = "Name")
	public Serializable getName() {
		return this.name;
	}

	public void setName(Serializable name) {
		this.name = name;
	}

	@Column(name = "NormalizedName", unique = true)
	public Serializable getNormalizedName() {
		return this.normalizedName;
	}

	public void setNormalizedName(Serializable normalizedName) {
		this.normalizedName = normalizedName;
	}

	@Column(name = "ConcurrencyStamp")
	public Serializable getConcurrencyStamp() {
		return this.concurrencyStamp;
	}

	public void setConcurrencyStamp(Serializable concurrencyStamp) {
		this.concurrencyStamp = concurrencyStamp;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aspNetRoles")
	public Set<AspNetRoleClaims> getAspNetRoleClaims() {
		return this.aspNetRoleClaims;
	}

	public void setAspNetRoleClaims(Set<AspNetRoleClaims> aspNetRoleClaims) {
		this.aspNetRoleClaims = aspNetRoleClaims;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "AspNetUserRoles", schema = "dbo", catalog = "onlineaccounting", joinColumns = {
			@JoinColumn(name = "RoleId", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "UserId", nullable = false, updatable = false) })
	public Set<AspNetUsers> getAspNetUsers() {
		return this.aspNetUsers;
	}

	public void setAspNetUsers(Set<AspNetUsers> aspNetUsers) {
		this.aspNetUsers = aspNetUsers;
	}

}

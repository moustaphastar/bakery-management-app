package com.cayirozu.db.entity;
// Generated 19 Ara 2020 06:35:03 by Hibernate Tools 5.2.12.Final

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CustomerPayment generated by hbm2java
 */
@Entity
@Table(name = "CustomerPayment", schema = "dbo", catalog = "onlineaccounting")
public class CustomerPayment implements java.io.Serializable {

	private int id;
	private Customer customer;
	private CustomerDebit customerDebit;
	private BigDecimal amountPaid;
	private Date paymentDate;
	private char paymentType;
	private char approvalStatus;
	private Date lastUpdate;
	private boolean active;

	public CustomerPayment() {
	}

	public CustomerPayment(int id, Customer customer, CustomerDebit customerDebit, BigDecimal amountPaid,
			Date paymentDate, char paymentType, char approvalStatus, Date lastUpdate, boolean active) {
		this.id = id;
		this.customer = customer;
		this.customerDebit = customerDebit;
		this.amountPaid = amountPaid;
		this.paymentDate = paymentDate;
		this.paymentType = paymentType;
		this.approvalStatus = approvalStatus;
		this.lastUpdate = lastUpdate;
		this.active = active;
	}

	@Id

	@Column(name = "Id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CustomerId", nullable = false)
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CustomerDebitId", nullable = false)
	public CustomerDebit getCustomerDebit() {
		return this.customerDebit;
	}

	public void setCustomerDebit(CustomerDebit customerDebit) {
		this.customerDebit = customerDebit;
	}

	@Column(name = "AmountPaid", nullable = false, precision = 9)
	public BigDecimal getAmountPaid() {
		return this.amountPaid;
	}

	public void setAmountPaid(BigDecimal amountPaid) {
		this.amountPaid = amountPaid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PaymentDate", nullable = false, length = 19)
	public Date getPaymentDate() {
		return this.paymentDate;
	}

	public void setPaymentDate(Date paymentDate) {
		this.paymentDate = paymentDate;
	}

	@Column(name = "PaymentType", nullable = false, length = 1)
	public char getPaymentType() {
		return this.paymentType;
	}

	public void setPaymentType(char paymentType) {
		this.paymentType = paymentType;
	}

	@Column(name = "ApprovalStatus", nullable = false, length = 1)
	public char getApprovalStatus() {
		return this.approvalStatus;
	}

	public void setApprovalStatus(char approvalStatus) {
		this.approvalStatus = approvalStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LastUpdate", nullable = false, length = 19)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	@Column(name = "Active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

}
